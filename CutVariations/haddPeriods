#!/bin/bash

source /cvmfs/alice.cern.ch/etc/login.sh
eval $(alienv printenv VO_ALICE@O2Physics::daily-20240214-0100-1)

#Results=/dcache/alice/jlomker/LHC23_PbPb_pass1
#Results=/dcache/alice/jlomker/LHC22_pass4_highIR_sampling
Results=/dcache/alice/jlomker/LHC22_pass4_lowIR

cp $Results/*.txt .			# cp all available merge files (for each period)
echo ${Results}/*.txt > periodList.txt  # write all periods upto a file for iteration (at the bottom of this file)


cuts=(
    "maxChi2PerClusterITS=30"
    "maxChi2PerClusterITS=42"
    "maxChi2PerClusterTPC=2"
    "maxChi2PerClusterTPC=3"
    "maxChi2PerClusterTPC=5"
    "maxChi2PerClusterTPC=6"
    "maxDcaZ=1"
    "maxDcaZ=3"
    "maxDcaXY=0.5"
    "maxDcaXY=1"
    "maxDcaXY=1.5"
    "maxDcaXY=2.5"
    "maxDcaXY=3"
    "minNCrossedRowsOverFindableClustersTPC=0.6"
    "minNCrossedRowsOverFindableClustersTPC=0.7"
    "minNCrossedRowsOverFindableClustersTPC=0.9"
    "minNCrossedRowsOverFindableClustersTPC=1.0"
    "minNCrossedRowsTPC=110"
    "minNCrossedRowsTPC=60"
    "minNCrossedRowsTPC=80"
    "globalTrackWoPtEta=true"
    "globalTrackWoDCA=true"
    "globalTrack=true"
    "itsPattern=0"
    "itsPattern=1"
    "itsPattern=3"
    "minTPCNClsFound=1"
    "minTPCNClsFound=2"
    "minTPCNClsFound=3"
)


mergePeriod(){

export mergeFile=$1

while IFS= read -r line
do
  export Period="${mergeFile//'.txt'/}" # get period name
  echo "Period: ${Period}"
  mkdir -p "${Results}/CutVariations/${Period}" # make save path for hadded files
  while IFS= read -r line
  do
    Runnumber="${line//'/AO2D.root'/}" # get runnumbers 
    echo $Runnumber
    for cut in "${cuts[@]}"; do
        if [[ $cut == *'.'* ]]; then
            tmp="${cut//'.'/_}"
            cut_var="${tmp//'='/}"
            echo "${Results}/${Runnumber}/CutVariations/AnalysisResults_${cut_var}.root" >> hadd_this_${Period}_${cut_var}.list
        elif [[ $cut == *'true'* ]]; then
            tmp="${cut//'true'/}"
            cut_var="${tmp//'='/}"
            echo "${Results}/${Runnumber}/CutVarations/AnalysisResults_${cut_var}.root" >> hadd_this_${Period}_${cut_var}.list
        else
            cut_var="${cut//'='/}"
            echo "${Results}/${Runnumber}/CutVariations/AnalysisResults_${cut_var}.root" >> hadd_this_${Period}_${cut_var}.list
        fi
        done
  done < $mergeFile
  for cut in "${cuts[@]}"; do
      if [[ $cut == *'.'* ]]; then
          tmp="${cut//'.'/_}"
          cut_var="${tmp//'='/}"
          hadd -k "AnalysisResults_${cut_var}.root" @hadd_this_${Period}_${cut_var}.list
      elif [[ $cut == *'true'* ]]; then
          tmp="${cut//'true'/}"
          cut_var="${tmp//'='/}"
          hadd -k "AnalysisResults_${cut_var}.root" @hadd_this_${Period}_${cut_var}.list
      else
          cut_var="${cut//'='/}"
          hadd -k "AnalysisResults_${cut_var}.root" @hadd_this_${Period}_${cut_var}.list
      fi
      cp "AnalysisResults_${cut_var}.root" "${Results}/CutVariations/${Period}/AnalysisResults_${cut_var}.root"
  done
done < $mergeFile

rm -rf hadd_*.list

}


IFS=" " read -a periodPaths < periodList.txt # here we loop oer the periods and call the function from above 

echo ${periodPaths[@]}
for i in "${periodPaths[@]}"
do
  tmp="${i//${Results}'/'/}"
  echo "tmp: ${tmp}"
  mergePeriod ${tmp}
  echo "mergedPeriod: $tmp" >> periods.txt
done < periodList.txt

rm -rf *.txt

